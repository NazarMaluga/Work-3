#include <stdio.h>

int main() {
    int r;
    scanf("%d", &r);

    // Якщо кількість розрядів р = 1, то є тільки два можливих числа: 5 і 9
    if (r == 1) {
        printf("2\n");
        return 0;
    }
    
    // Якщо кількість розрядів р = 2, то є чотири можливих числа: 55, 59, 95, 99
    if (r == 2) {
        printf("4\n");
        return 0;
    }
    
    // dp[i][0] - кількість чисел довжини i, що закінчуються на 5, причому передостання цифра - не 5
    // dp[i][1] - кількість чисел довжини i, що закінчуються на 55
    // dp[i][2] - кількість чисел довжини i, що закінчуються на 9, причому передостання цифра - не 9
    // dp[i][3] - кількість чисел довжини i, що закінчуються на 99
    // dp[i][4] - кількість чисел довжини i, що закінчуються на 95
    // dp[i][5] - кількість чисел довжини i, що закінчуються на 59
    
    long long dp[r + 1][6];
    
    // Початкові умови для довжини 2
    dp[2][0] = 1;  // 5 (де передостання цифра не 5)
    dp[2][1] = 1;  // 55
    dp[2][2] = 1;  // 9 (де передостання цифра не 9)
    dp[2][3] = 1;  // 99
    dp[2][4] = 1;  // 95
    dp[2][5] = 1;  // 59
    
    // Заповнюємо dp таблицю для довжин від 3 до r
    for (int i = 3; i <= r; i++) {
        dp[i][0] = dp[i - 1][2] + dp[i - 1][3] + dp[i - 1][4];  // 5 додається до чисел, що закінчуються на 9 або 99 або 95
        dp[i][1] = dp[i - 1][0];                                // 55 додається до чисел, що закінчуються на 5 (не 55)
        dp[i][2] = dp[i - 1][0] + dp[i - 1][1] + dp[i - 1][5];  // 9 додається до чисел, що закінчуються на 5 або 55 або 59
        dp[i][3] = dp[i - 1][2];                                // 99 додається до чисел, що закінчуються на 9 (не 99)
        dp[i][4] = dp[i - 1][2];                                // 95 додається до чисел, що закінчуються на 9 (не 99)
        dp[i][5] = dp[i - 1][0];                                // 59 додається до чисел, що закінчуються на 5 (не 55)
    }
    
    // Сума всіх можливих чисел довжини r
    long long result = dp[r][0] + dp[r][1] + dp[r][2] + dp[r][3] + dp[r][4] + dp[r][5];
    
    printf("%lld\n", result);
    
    return 0;
}
